<!doctype html>
<html>
    <head>
		<meta charset="UTF-8">
		<link rel="stylesheet" type="text/css" href="style.css">
     
		<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=yes' />
		<link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
		<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.js'></script>
		<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.css' rel='stylesheet' />
		<script type="text/javascript" src="./data/timetable.js"></script>
		<script type="text/javascript" src="./data/tramwaje.js"></script>
		<script type="text/javascript" src="./data/stops.js"></script> 
		<script type="text/javascript" src="./data/routes.js"></script> 
		<script type="text/javascript" src="./scripts/tram_class.js"></script> 
	</head>
	 
    <body>
		<div id="map"> </div>
		
		<div id="show-time">Here it should be hour, but there isn't</div>
		
		<button class="pause-button" onclick="stopTime()" type="submit">
			<img src="./img/pause.png" width="15px" height="15px" alt="submit" />
		</button>
		
		<button class="play-button" onclick="runTime()" type="submit">
			<img src="./img/play.png" width="15px" height="15px" alt="submit" />
		</button>
		
		<button class="play-faster-button" onclick="runTimeFaster()" type="submit">
			<img src="./img/play-faster.png" width="30px" height="15px" alt="submit" />
		</button>
		
		<div class="box-shadow ">
			<div class="box-shadow-row">
				<div class="box-shadow-column" style="background-color:#6BC926;"> <p>pusto</p> </div>
				<div class="box-shadow-column" style="background-color:#D1CF1E;"> <p>więcej</p> </div>
				<div class="box-shadow-column" style="background-color:#EFBB0F;"> <p>sreednio</p> </div>
				<div class="box-shadow-column" style="background-color:#EF7120;"> <p>sporo</p> </div>
				<div class="box-shadow-column" style="background-color:#EF2A36;"> <p>za dużo</p> </div>
			</div>
		</div>
		
		<!--<div class="colors"></div>-->
		
		<script>
			/* INIT MAPBOX */
			mapboxgl.accessToken = 'pk.eyJ1IjoienluZ2llciIsImEiOiJjanRiYXY3bHkwaXdqNDNwY2MydDcwMG1kIn0.4AC7oex5FdmCaTQPiUnJ5Q';
			var map = new mapboxgl.Map({
				container: 'map',
				style: 'mapbox://styles/mapbox/light-v9',
				center: [19.9449799, 50.0646501],
				minZoom: 11,
				zoom: 11
			});
			map.addControl(new mapboxgl.NavigationControl());
			
			/* ADD STOPS MARKERS */
			geojson.features.forEach(function(marker) {
				var el = document.createElement('div');
				el.className = 'stop-marker';

				new mapboxgl.Marker(el)
					.setLngLat(marker.geometry.coordinates)
					.setPopup(new mapboxgl.Popup({offset: 25})
						.setHTML('<h3>' + marker.properties.title + '</h3><p>' + marker.properties.description + '</p>'))
					.addTo(map);
			});

			/* ON LOAD WEBSITE */
			window.onload = function () { 
				//alert("It's loaded!") 
			}
			
			/* DECLARE VARIABLES */
			var weekday = new Array(7);
			weekday[0] = "Sun";
			weekday[1] = "Mon";
			weekday[2] = "Tue";
			weekday[3] = "Wed";
			weekday[4] = "Thu";
			weekday[5] = "Fri";
			weekday[6] = "Sat";
			
			var today = new Date();
			var sec = today.getSeconds();
			var min = today.getMinutes();
			var h = today.getHours();
			var day = today.getDay();
			
			h=9;
			min=59;
			sec=59;
			
			var STATE_STOP = 0;
			var STATE_RUN = 1;
			var STATE_RUN_FASTER = 10; //5
			
			var current_speed = 1;

			var trams = [];
			
			/* TIME */
			function checkTime(time){ return time<10 ? '0'+time : time }
			function addSec(sec){ return sec<59? sec+1 : 0 }
			function addMin(min){ return addSec(min); }
			function addH(h){ return h<23? h+1 : 0 }
			function addDay(day){ return day<5? day+1 : 0 }
			
			function stopTime(){
				current_speed = STATE_STOP;
			}
			
			function runTime(){
				if(current_speed == STATE_STOP){
					current_speed = STATE_RUN;
					update();
				}
				else if(current_speed == STATE_RUN_FASTER){
					current_speed = STATE_RUN;
				}
			}
			
			function runTimeFaster(){
				if(current_speed == STATE_STOP){
					current_speed = STATE_RUN_FASTER;
					update();
				}
				else if(current_speed == STATE_RUN){
					current_speed = STATE_RUN_FASTER;
				}
			}
			
			/* MAIN LOOP */
			function update() {
				sec=addSec(sec);
				if(sec==0) min=addMin(min);
				if(min==0 && sec==0) h=addH(h);
				if(min==0 && sec==0 && h==0) day=addDay(day);
				
				var time = weekday[day] + ", " + checkTime(h) + ":" + checkTime(min) + ":" + checkTime(sec);
				document.getElementById("show-time").innerHTML = time;
				
				checkIfNewTramStart2();
				
				for (var i = 0; i < trams.length; i++) {
					if(trams[i].getWaiting()==0) {
						/*
						var tmp1=-1;
						var tmp2=-1;
						for(var j=0; j<przystanki.length; j++){
							if(trams[i].getPreviousStop() == przystanki[j])
								tmp1=j;
							
							if(trams[i].getNextStop() == przystanki[j])
								tmp2=j;
						}
						
						var myLat = lat_[tmp2];
						var myLon = lon_[tmp2];
						*/
						
						var obj2 = JSON.parse(routess);		
						//console.log(obj2.routes[trams[i].getRoutesID()].from);
						//console.log(obj2.routes[trams[i].getRoutesID()].to);
									
						(obj2.routes).forEach(function(route) {
							if(route.from==trams[i].getPreviousStop() && route.to==trams[i].getNextStop()){
								console.log(route.from);
								if(trams[i].getTimeBetweenIntermediatePoints()==-90) {
									trams[i].setTimeBetweenIntermediatePoints(trams[i].getNextStopIn()/(route.lon.length-trams[i].getIntermediateID()));
								}
								
								if(trams[i].getLat()==route.to_loc[0] && trams[i].getLon()==route.to_loc[1]) {
									console.log("Przystanek, juhu :D");
									var usatione=false;
									var obj2 = JSON.parse(tramwaje);		
									(obj2.trams).forEach(function(trams_) {
										if(trams_.last_stop==trams[i].getDirection()) {
											console.log("Ten tramwaj");
											for(var j=0; j<trams_.route.length-1; j++) {
												console.log("trasa");

												if(trams_.route[j]==trams[i].getNextStop() && !usatione){
													trams[i].setPreviousStop(trams_.route[j]);
													trams[i].setNextStop(trams_.route[j+1]);
													usatione=true;
												}
											}
										}
									});
									
									//polaczenia[0][1]*60
									
									var tmp1=-1;
									var tmp2=-1;
									for(var j=0; j<przystanki.length; j++) {
										if(przystanki[j]==trams[i].getPreviousStop()) {
											tmp1=j;
										}
										
										if(przystanki[j]==trams[i].getNextStop()) {
											tmp2=j;
										}
									}
									
									trams[i].setIntermediateID(0);
									trams[i].setNextStopIn(polaczenia[tmp1][tmp2]*60);									
									trams[i].setTimeBetweenIntermediatePoints(-90);
									
									
								}
								else if(trams[i].getLon()==route.lon[trams[i].getIntermediateID()] && trams[i].getLat()==route.lat[trams[i].getIntermediateID()]){
									console.log("Dojechałem tutaj i jade teraz tam xD")
									trams[i].setIntermediateID(trams[i].getIntermediateID()+1);
								}
								else {
									console.log("Jadę");
									//console.log(">>"+route.lon[trams[i].getIntermediateID()]);
									//console.log(">>"+route.lat[trams[i].getIntermediateID()]);
									//console.log(((route.lon[trams[i].getIntermediateID()]-trams[i].getLon()))/trams[i].getNextStopIn());
									//console.log(((route.lon[trams[i].getIntermediateID()]-trams[i].getLon())*route.lon.length)/trams[i].getNextStopIn());
									trams[i].setLon(trams[i].getLon()+(route.lon[trams[i].getIntermediateID()]-trams[i].getLon())/(trams[i].getNextStopIn()-trams[i].getTimeBetweenIntermediatePoints()*(route.lon.length-trams[i].getIntermediateID()-1)));
									trams[i].setLat(trams[i].getLat()+(route.lat[trams[i].getIntermediateID()]-trams[i].getLat())/(trams[i].getNextStopIn()-trams[i].getTimeBetweenIntermediatePoints()*(route.lat.length-trams[i].getIntermediateID()-1)));
									console.log((route.lon[trams[i].getIntermediateID()]-trams[i].getLon())/(trams[i].getNextStopIn()-trams[i].getTimeBetweenIntermediatePoints()*(route.lon.length-trams[i].getIntermediateID()-1)));
								}
									
							}
						});
						
						console.log(trams[i].getNextStopIn());
					}
					else {
						trams[i].setWaiting(trams[i].getWaiting()-1);
					}						

					console.log(trams[i]);
					
					trams[i].setNextStopIn(trams[i].getNextStopIn()-1);
					trams[i].getMarker().setLngLat([trams[i].getLon(), trams[i].getLat()]);					
				}
				
				if(current_speed!=0) setTimeout(update, 1000/current_speed);
			}
			update();
			
			function checkIfNewTramStart(){
				if(sec==0){
				var obj = JSON.parse(timetable);			
				
				(obj.stops).forEach(function(stop) {
					if(stop.type == "petla"){
						(stop.trams).forEach(function(tram) {
							(tram.time).forEach(function(time) {
								if(time.hours == h){
									for(var i=0; i<time.minutes.length; i++){
										if(time.minutes[i] == min){
											writeMessage("Tramwaj nr " + tram.number + " wyrusza na podbój Krakowa xD");											
											trams.push(new Tram(50, "Krowodrza Górka", stop.lat, stop.lng, "Kurdwanow P+R", "Witosa", document.createElement('div')));
											trams[trams.length-1].getMarkerColor().className = 'tram-crowd-1';
											trams[trams.length-1].setMarker(new mapboxgl.Marker(trams[trams.length-1].getMarkerColor()).setLngLat([stop.lat, stop.lng]).addTo(map));
										}
									}
								}
							});
						});
					}
				});
									
				}
			}
			
			function checkIfNewTramStart2(){
				if(sec==0){
				var obj = JSON.parse(tramwaje);			
				
				(obj.trams).forEach(function(trams_) {					
					(trams_.days).forEach(function(days_) {
						if(days_.min_day<=day && days_.max_day>=day){
							(days_.time).forEach(function(time_) {
								if(time_.hours == h){
									for(var i=0; i<time_.minutes.length; i++){
										if(time_.minutes[i] == min){
											writeMessage("Tramwaj nr " + trams_.number + " wyrusza na podbój Krakowa xD");
											//writeMessage("Tramwaj nr " + trams_.number + " wyrusza z " + trams_.first_stop + " w kierunku " + trams_.last_stop);
											
											var tmp_i=0;
											var flaga=true;
											var obj2 = JSON.parse(routess);	
											
											(obj2.routes).forEach(function(route) {
												if(route.from==trams_.first_stop && route.to==trams_.route[1]){
													flaga=false;	
												}
												else {
													if(flaga){
														tmp_i+=1;
													}
												}
											});
											
											trams.push(new Tram(trams_.number, trams_.last_stop, trams_.lat, trams_.lng, trams_.first_stop, trams_.route[1], tmp_i, polaczenia[0][1]*60, document.createElement('div')));
											trams[trams.length-1].getMarkerColor().className = 'tram-crowd-1';
											trams[trams.length-1].setMarker(new mapboxgl.Marker(trams[trams.length-1].getMarkerColor()).setLngLat([trams_.lat, trams_.lng]).addTo(map));
										}
									}
								}
							});
						}
					});
				});
									
				}
			}
			
			function writeMessage(text){
				var time = weekday[day] + ", " + checkTime(h) + ":" + checkTime(min) + ":" + checkTime(sec);
				console.log("[" + time + "] " + text);
			}
			

/* TMPP **********************/		
				
			//trams[0].setLon(trams[0].getLon()+0.0001);
			//trams[0].setLat(trams[0].getLat()+0.0001);
				
			//trams[1].setLon(trams[1].getLon()+0.0002);
			//trams[1].setLat(trams[1].getLat()-0.0001);
									//trams.splice(0,1)

				
			//var queue = [];
			//queue.push(obj);
			//queue.push(obj2); 		// queue is now [2, 5]
			//var i = queue.shift(); // queue is now [5] //pop() - od drugiej stony xD
			//alert(i.getNumber()); 	// displays 2
			//var i = queue.shift(); // queue is now [5]
			//console.log(queue.length);
			//alert(i.getDirection());              // displays 2
	
	
	
			
	
			
		</script>
    </body>
</html>


<!--
map.on('load', function () {

	map.addLayer({
		"id": "route",
		"type": "line",
		"source": {
			"type": "geojson",
			"data": {
				"type": "Feature",
				"properties": {},
				"geometry": {
					"type": "LineString",
					"coordinates": [
						[19.957604166666666,50.01228611111111],
						[19.960451388888888,50.01255944444444],
						[19.960451388888888,50.01255944444444],
						[19.960451388888888,50.01255944444444],
						[19.963125,50.013128888888886],
						[19.963125,50.013128888888886],
						[19.96465277777778,50.01347055555556],
						[19.96465277777778,50.01347055555556],
						[19.96465277777778,50.01347055555556],
						[19.96496527777778,50.01351611111111],
						[19.96496527777778,50.01351611111111],
						[19.96496527777778,50.01351611111111],
						[19.96496527777778,50.01351611111111],
						[19.96496527777778,50.01353888888889],
						[19.96496527777778,50.01353888888889],
						[19.96496527777778,50.01353888888889],
						[19.965729166666666,50.01388055555555],
						[19.965729166666666,50.01388055555555],
						[19.965729166666666,50.01388055555555],
						[19.968263888888888,50.01470055555556],
						[19.968263888888888,50.01470055555556],
						[19.968263888888888,50.01470055555556],
						[19.970868055555556,50.01531555555555],
						[19.970868055555556,50.01531555555555],
						[19.971805555555555,50.01554333333333],
						[19.971805555555555,50.01554333333333],
						[19.971805555555555,50.01554333333333],
						[19.971805555555555,50.01554333333333],
						[19.971770833333334,50.015497777777775],
						[19.971770833333334,50.015497777777775],
						[19.971770833333334,50.015497777777775],
						[19.973020833333333,50.015793888888886],
						[19.973020833333333,50.015793888888886],
						[19.97579861111111,50.01643166666667],
						[19.97579861111111,50.01643166666667],
						[19.97579861111111,50.01643166666667],
						[19.9775,50.01768444444444],
						[19.9775,50.01768444444444],
						[19.9775,50.01768444444444],
						[19.977534722222224,50.01864111111111],
						[19.977534722222224,50.01864111111111],
						[19.977534722222224,50.01864111111111],
						[19.9775,50.018618333333336],
						[19.9775,50.018618333333336],
						[19.9775,50.018618333333336],
						[19.9775,50.019552222222224],
						[19.9775,50.019552222222224],
						[19.9775,50.019552222222224],
						[19.9775,50.019552222222224],
						[19.977395833333333,50.020918888888886],
						[19.977395833333333,50.020918888888886],
						[19.977395833333333,50.020918888888886],
						[19.97763888888889,50.02153388888889],
						[19.97763888888889,50.02153388888889],
						[19.97763888888889,50.02153388888889],
						[19.97763888888889,50.02153388888889],
						[19.978125,50.02287777777778],
						[19.978125,50.02287777777778],
						[19.978125,50.02287777777778],
						[19.97923611111111,50.023561111111114],
						[19.97923611111111,50.023561111111114],
						[19.97923611111111,50.023561111111114],
						[19.97954861111111,50.023720555555556],
						[19.97954861111111,50.023720555555556],
						[19.97954861111111,50.023720555555556],
						[19.97951388888889,50.023720555555556],
						[19.97951388888889,50.023720555555556],
						[19.97951388888889,50.023720555555556],
						[19.97951388888889,50.023720555555556],
						[19.97951388888889,50.023720555555556],
						[19.97951388888889,50.023720555555556],
						[19.97951388888889,50.023720555555556],
						[19.97954861111111,50.023743333333336],
						[19.97954861111111,50.023743333333336],
						[19.97954861111111,50.023743333333336],
						[19.97954861111111,50.023743333333336],
						[19.97954861111111,50.023743333333336],
						[19.97954861111111,50.023743333333336],
						[19.979618055555555,50.02376611111111],
						[19.979618055555555,50.02376611111111],
						[19.979618055555555,50.02376611111111],
						[19.979618055555555,50.02376611111111],
						[19.979618055555555,50.02440388888889],
						[19.979618055555555,50.02440388888889],
						[19.979618055555555,50.02440388888889],
						[19.979618055555555,50.02440388888889],
						[19.978020833333332,50.02583888888889],
						[19.978020833333332,50.02583888888889],
						[19.977118055555554,50.02670444444445],
						[19.977118055555554,50.02670444444445],
						[19.977118055555554,50.02670444444445],
						[19.977118055555554,50.02670444444445],
						[19.977118055555554,50.02670444444445],
						[19.977118055555554,50.02670444444445],
						[19.977083333333333,50.02670444444445],
						[19.977083333333333,50.02670444444445],
						[19.977083333333333,50.02670444444445],
						[19.977083333333333,50.02670444444445],
						[19.977083333333333,50.02672722222222],
						[19.977083333333333,50.02672722222222],
						[19.976354166666667,50.027410555555555],
						[19.976354166666667,50.027410555555555],
						[19.9746875,50.029073333333336],
						[19.9746875,50.029073333333336],
						[19.9746875,50.029073333333336],
						[19.97309027777778,50.03062222222222],
						[19.97309027777778,50.03062222222222],
						[19.97309027777778,50.03062222222222],
						[19.97309027777778,50.03062222222222],
						[19.973229166666666,50.03148777777778],
						[19.973229166666666,50.03148777777778],
						[19.973229166666666,50.03148777777778],
						[19.973229166666666,50.03148777777778],
						[19.975381944444443,50.03249],
						[19.975381944444443,50.03249],
						[19.977013888888887,50.03346944444444],
						[19.977013888888887,50.03346944444444],
						[19.977013888888887,50.03346944444444],
						[19.9771875,50.03356055555555],
						[19.9771875,50.03356055555555],
						[19.9771875,50.03356055555555],
						[19.978159722222223,50.03417555555556],
						[19.978159722222223,50.03417555555556],
						[19.978159722222223,50.03417555555556],
						[19.980243055555555,50.035428333333336],
						[19.980243055555555,50.035428333333336],
						[19.980243055555555,50.035428333333336],
						[19.9825,50.03672666666667],
						[19.9825,50.03672666666667],
						[19.9825,50.03672666666667],
						[19.982916666666668,50.03834388888889],
						[19.982916666666668,50.03834388888889],
						[19.982916666666668,50.03834388888889],
						[19.98298611111111,50.04000666666666],
						[19.98298611111111,50.04000666666666],
						[19.98298611111111,50.04000666666666],
						[19.98298611111111,50.04000666666666],
						[19.983020833333335,50.04002944444444],
						[19.983020833333335,50.04002944444444],
						[19.983020833333335,50.04002944444444],
						[19.983020833333335,50.04002944444444],
						[19.98298611111111,50.04002944444444],
						[19.98298611111111,50.04002944444444],
						[19.98298611111111,50.04002944444444],
						[19.98298611111111,50.04002944444444],
						[19.9828125,50.04059888888889],
						[19.9828125,50.04059888888889],
						[19.981979166666665,50.04071277777778],
						[19.981979166666665,50.04071277777778],
						[19.981979166666665,50.04071277777778],
						[19.981493055555557,50.04069],
						[19.981493055555557,50.04069],
						[19.981493055555557,50.04069],
						[19.980104166666667,50.040667222222226],
						[19.980104166666667,50.040667222222226],
						[19.980104166666667,50.040667222222226],
						[19.978020833333332,50.040667222222226],
						[19.978020833333332,50.040667222222226],
						[19.978020833333332,50.040667222222226],
						[19.977847222222223,50.04062166666667],
						[19.977847222222223,50.04062166666667],
						[19.976319444444446,50.04078111111111],
						[19.976319444444446,50.04078111111111],
						[19.976319444444446,50.04078111111111],
						[19.97458333333333,50.04219333333333],
						[19.97458333333333,50.04219333333333],
						[19.97458333333333,50.04219333333333],
						[19.973854166666666,50.04390166666666],
						[19.973854166666666,50.04390166666666],
						[19.973854166666666,50.04390166666666],
						[19.973472222222224,50.04474444444445],
						[19.973472222222224,50.04474444444445],
						[19.973472222222224,50.04474444444445],
						[19.973472222222224,50.04474444444445],
						[19.973472222222224,50.04474444444445],
						[19.973472222222224,50.04474444444445],
						[19.973472222222224,50.04474444444445],
						[19.9734375,50.04481277777778],
						[19.9734375,50.04481277777778],
						[19.9728125,50.045632777777776],
						[19.9728125,50.045632777777776],
						[19.9728125,50.045632777777776],
						[19.97076388888889,50.047022222222225],
						[19.97076388888889,50.047022222222225],
						[19.97076388888889,50.047022222222225],
						[19.97076388888889,50.047022222222225],
						[19.96875,50.048320555555556],
						[19.96767361111111,50.04895833333333],
						[19.96767361111111,50.04895833333333],
						[19.96767361111111,50.04895833333333],
						[19.96767361111111,50.04895833333333],
						[19.967430555555556,50.04907222222222],
						[19.967430555555556,50.04907222222222],
						[19.967430555555556,50.04907222222222],
						[19.966215277777778,50.049459444444445],
						[19.966215277777778,50.049459444444445],
						[19.96420138888889,50.049915],
						[19.96420138888889,50.049915],
						[19.96420138888889,50.049915],
						[19.963993055555555,50.04998333333333],
						[19.963993055555555,50.04998333333333],
						[19.963993055555555,50.04998333333333],
						[19.96392361111111,50.04998333333333],
						[19.96392361111111,50.04998333333333],
						[19.96392361111111,50.04998333333333],
						[19.961875,50.05112222222222],
						[19.961875,50.05112222222222],
						[19.961875,50.05112222222222],
						[19.960763888888888,50.05283055555556],
						[19.960763888888888,50.05283055555556],
						[19.960763888888888,50.05283055555556],
						[19.959652777777777,50.054561666666665],
						[19.959652777777777,50.054561666666665],
						[19.959652777777777,50.054561666666665],
						[19.959652777777777,50.054561666666665],
						[19.959027777777777,50.05617888888889],
						[19.959027777777777,50.05617888888889],
						[19.959027777777777,50.05617888888889],
						[19.959027777777777,50.05617888888889],
						[19.959027777777777,50.05665722222222],
						[19.959027777777777,50.05665722222222],
						[19.959027777777777,50.05665722222222],
						[19.959027777777777,50.05665722222222],
						[19.95895833333333,50.05706722222222],
						[19.95895833333333,50.05706722222222],
						[19.95895833333333,50.05706722222222],
						[19.958993055555556,50.05709],
						[19.958993055555556,50.05709],
						[19.958993055555556,50.05709],
						[19.958993055555556,50.05709],
						[19.958993055555556,50.05761388888889],
						[19.958993055555556,50.05761388888889],
						[19.958993055555556,50.05761388888889],
						[19.958993055555556,50.05761388888889],
						[19.9590625,50.05788722222222],
						[19.9590625,50.05788722222222],
						[19.9590625,50.05788722222222],
						[19.9590625,50.05788722222222],
						[19.9590625,50.05788722222222],
						[19.9590625,50.05788722222222],
						[19.95920138888889,50.058479444444444],
						[19.95920138888889,50.058479444444444],
						[19.95920138888889,50.058479444444444],
						[19.959270833333335,50.058616111111114],
						[19.959270833333335,50.058616111111114],
						[19.959270833333335,50.058616111111114],
						[19.959270833333335,50.058616111111114],
						[19.95923611111111,50.058638888888886],
						[19.95923611111111,50.058638888888886],
						[19.95954861111111,50.05952722222222],
						[19.95954861111111,50.05952722222222],
						[19.96017361111111,50.061326666666666],
						[19.96017361111111,50.061326666666666],
						[19.96,50.06317166666667],
						[19.96,50.06317166666667],
						[19.96,50.06317166666667],
						[19.96,50.06317166666667],
						[19.96,50.06317166666667],
						[19.959618055555556,50.06419666666667],
						[19.959618055555556,50.06419666666667],
						[19.959618055555556,50.06419666666667],
						[19.959618055555556,50.06424222222222],
						[19.959618055555556,50.06424222222222],
						[19.959618055555556,50.06424222222222],
						[19.959618055555556,50.06424222222222],
						[19.959583333333335,50.064265],
						[19.959583333333335,50.064265],
						[19.959583333333335,50.064265],
						[19.959444444444443,50.06465222222222],
						[19.959444444444443,50.06465222222222],
						[19.959444444444443,50.06465222222222],
						[19.959444444444443,50.06465222222222],
						[19.95923611111111,50.065062222222224],
						[19.95923611111111,50.065062222222224],
						[19.95923611111111,50.065062222222224],
						[19.95923611111111,50.065062222222224],
						[19.959097222222223,50.065358333333336],
						[19.959097222222223,50.065358333333336],
						[19.959097222222223,50.065358333333336],
						[19.959097222222223,50.065358333333336],
						[19.958993055555556,50.06556333333333],
						[19.958993055555556,50.06556333333333],
						[19.958993055555556,50.06556333333333],
						[19.95875,50.06595055555555],
						[19.95875,50.06595055555555],
						[19.95875,50.06595055555555],
						[19.95875,50.06595055555555],
						[19.95857638888889,50.06620111111111],
						[19.95857638888889,50.06620111111111],
						[19.95857638888889,50.06620111111111],
						[19.95857638888889,50.06620111111111],
						[19.95857638888889,50.06617833333333],
						[19.95857638888889,50.06617833333333],
						[19.95857638888889,50.06617833333333],
						[19.95857638888889,50.06620111111111],
						[19.95857638888889,50.06620111111111],
						[19.95857638888889,50.06620111111111],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.958506944444444,50.066315],
						[19.947105,50.0684158333],	/* Dworzec Główny Tunel */
						[19.9449555556,50.0709847222], /* Politechnika */
						[19.944930555555555,50.07378611111111],
						[19.944930555555555,50.07378611111111],
						[19.944930555555555,50.07378611111111],
						[19.94388888888889,50.07490222222222],
						[19.94388888888889,50.07490222222222],
						[19.94388888888889,50.07490222222222],
						[19.94388888888889,50.07490222222222],
						[19.941458333333333,50.075699444444446],
						[19.941458333333333,50.075699444444446],
						[19.941458333333333,50.075699444444446],
						[19.941458333333333,50.075699444444446],
						[19.941145833333334,50.07576777777778],
						[19.941145833333334,50.07576777777778],
						[19.941145833333334,50.07576777777778],
						[19.941145833333334,50.07576777777778],
						[19.9409375,50.07583611111111],
						[19.9409375,50.07583611111111],
						[19.9409375,50.07583611111111],
						[19.9409375,50.07585888888889],
						[19.9409375,50.07585888888889],
						[19.9409375,50.07585888888889],
						[19.9409375,50.07585888888889],
						[19.940104166666668,50.07601833333333],
						[19.940104166666668,50.07601833333333],
						[19.940104166666668,50.07601833333333],
						[19.940104166666668,50.07599555555556],
						[19.940104166666668,50.07599555555556],
						[19.940104166666668,50.07599555555556],
						[19.939340277777777,50.07633722222222],
						[19.939340277777777,50.07633722222222],
						[19.939340277777777,50.07633722222222],
						[19.939340277777777,50.07633722222222],
						[19.93784722222222,50.07788611111111],
						[19.93784722222222,50.07788611111111],
						[19.93784722222222,50.07788611111111],
						[19.93784722222222,50.07788611111111],
						[19.939097222222223,50.079412222222224],
						[19.939097222222223,50.079412222222224],
						[19.939097222222223,50.079412222222224],
						[19.939097222222223,50.079412222222224],
						[19.9384375,50.08052833333333],
						[19.937638888888888,50.08077888888889],
						[19.937638888888888,50.08077888888889],
						[19.937638888888888,50.08077888888889],
						[19.937638888888888,50.08077888888889],
						[19.93746527777778,50.080824444444445],
						[19.93746527777778,50.080824444444445],
						[19.936354166666668,50.08134833333333],
						[19.936354166666668,50.08134833333333],
						[19.936354166666668,50.08134833333333],
						[19.936354166666668,50.08134833333333],
						[19.935,50.08235055555556],
						[19.935,50.08235055555556],
						[19.935,50.08235055555556],
						[19.934270833333333,50.08355777777778],
						[19.934270833333333,50.08355777777778],
						[19.934270833333333,50.08355777777778],
						[19.9340625,50.08380833333333],
						[19.9340625,50.08380833333333],
						[19.9340625,50.08380833333333],
						[19.93402777777778,50.08387666666667],
						[19.93402777777778,50.08387666666667],
						[19.93402777777778,50.08387666666667],
						[19.933333333333334,50.08560777777778],
						[19.933333333333334,50.08560777777778],
						[19.933333333333334,50.08560777777778],
						[19.93263888888889,50.087498333333336],
						[19.93263888888889,50.087498333333336],
						[19.93263888888889,50.087498333333336],
						[19.93263888888889,50.087498333333336],
						[19.931875,50.08868277777778],
						[19.931875,50.08868277777778],
						[19.931875,50.08868277777778],
						[19.931875,50.08868277777778],
						[19.931805555555556,50.08875111111111],
						[19.931805555555556,50.08875111111111],
						[19.931805555555556,50.08875111111111],
						[19.931805555555556,50.08875111111111],
						[19.931631944444444,50.08893333333334],
						[19.931631944444444,50.08893333333334],
						[19.931631944444444,50.08893333333334]
					]
				}
			}
		},
		"layout": {
			"line-join": "round",
			"line-cap": "round"
		},
		"paint": {
			"line-color": "#888",
			"line-width": 3
		}
		
	});
});
-->